COMMENT ON TABLE osm.water_point IS 'OpenStreetMap water / waterway related points.  Includes combination of "natural" and "waterway" keys.  Generated by osm2pgsql Flex output using pgosm-flex/flex-config/water.lua';
COMMENT ON TABLE osm.water_line IS 'OpenStreetMap water / waterway related lines.  Includes combination of "natural" and "waterway" keys.  Generated by osm2pgsql Flex output using pgosm-flex/flex-config/water.lua';
COMMENT ON TABLE osm.water_polygon IS 'OpenStreetMap water / waterway related polygons.  Includes combination of "natural" and "waterway" keys.  Generated by osm2pgsql Flex output using pgosm-flex/flex-config/water.lua';

COMMENT ON COLUMN osm.water_point.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';
COMMENT ON COLUMN osm.water_line.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';
COMMENT ON COLUMN osm.water_polygon.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';

COMMENT ON COLUMN osm.water_point.osm_type IS 'Indicates the key (natural/waterway) providing the source for the detail';
COMMENT ON COLUMN osm.water_line.osm_type IS 'Indicates the key (natural/waterway) providing the source for the detail';
COMMENT ON COLUMN osm.water_polygon.osm_type IS 'Indicates the key (natural/waterway) providing the source for the detail';

COMMENT ON COLUMN osm.water_point.osm_subtype IS 'Value detail describing the key (osm_type).';
COMMENT ON COLUMN osm.water_line.osm_subtype IS 'Value detail describing the key (osm_type).';
COMMENT ON COLUMN osm.water_polygon.osm_subtype IS 'Value detail describing the key (osm_type).';

COMMENT ON COLUMN osm.water_point.layer IS 'Vertical ordering layer (Z) to handle crossing/overlapping features. "All ways without an explicit value are assumed to have layer 0." - per Wiki - https://wiki.openstreetmap.org/wiki/Key:layer';
COMMENT ON COLUMN osm.water_line.layer IS 'Vertical ordering layer (Z) to handle crossing/overlapping features. "All ways without an explicit value are assumed to have layer 0." - per Wiki - https://wiki.openstreetmap.org/wiki/Key:layer';
COMMENT ON COLUMN osm.water_polygon.layer IS 'Vertical ordering layer (Z) to handle crossing/overlapping features. "All ways without an explicit value are assumed to have layer 0." - per Wiki - https://wiki.openstreetmap.org/wiki/Key:layer';

COMMENT ON COLUMN osm.water_point.bridge IS 'If empty, assume not a bridge.  If not empty, check value for details.';
COMMENT ON COLUMN osm.water_line.bridge IS 'If empty, assume not a bridge.  If not empty, check value for details.';
COMMENT ON COLUMN osm.water_polygon.bridge IS 'If empty, assume not a bridge.  If not empty, check value for details.';

COMMENT ON COLUMN osm.water_point.tunnel IS 'If empty, assume not a tunnel.  If not empty, check value for details.';
COMMENT ON COLUMN osm.water_line.tunnel IS 'If empty, assume not a tunnel.  If not empty, check value for details.';
COMMENT ON COLUMN osm.water_polygon.tunnel IS 'If empty, assume not a tunnel.  If not empty, check value for details.';

COMMENT ON COLUMN osm.water_point.name IS 'Best name option determined by helpers.get_name(). Keys with priority are: name, short_name, alt_name and loc_name.  See pgosm-flex/flex-config/helpers.lua for full logic of selection.';
COMMENT ON COLUMN osm.water_line.name IS 'Best name option determined by helpers.get_name(). Keys with priority are: name, short_name, alt_name and loc_name.  See pgosm-flex/flex-config/helpers.lua for full logic of selection.';
COMMENT ON COLUMN osm.water_polygon.name IS 'Best name option determined by helpers.get_name(). Keys with priority are: name, short_name, alt_name and loc_name.  See pgosm-flex/flex-config/helpers.lua for full logic of selection.';

COMMENT ON COLUMN osm.water_point.geom IS 'Geometry loaded by osm2pgsql.';
COMMENT ON COLUMN osm.water_line.geom IS 'Geometry loaded by osm2pgsql.';
COMMENT ON COLUMN osm.water_polygon.geom IS 'Geometry loaded by osm2pgsql.';

COMMENT ON COLUMN osm.water_point.boat IS 'Access details for boat travel.  https://wiki.openstreetmap.org/wiki/Key:boat';
COMMENT ON COLUMN osm.water_line.boat IS 'Access details for boat travel.  https://wiki.openstreetmap.org/wiki/Key:boat';
COMMENT ON COLUMN osm.water_polygon.boat IS 'Access details for boat travel.  https://wiki.openstreetmap.org/wiki/Key:boat';


ALTER TABLE osm.water_point
    ADD CONSTRAINT pk_osm_water_point_osm_id
    PRIMARY KEY (osm_id)
;
ALTER TABLE osm.water_line
    ADD CONSTRAINT pk_osm_water_line_osm_id
    PRIMARY KEY (osm_id)
;
ALTER TABLE osm.water_polygon
    ADD CONSTRAINT pk_osm_water_polygon_osm_id
    PRIMARY KEY (osm_id)
;

-- osm_type column only has natural/waterway values.
-- Indexing osm_subtype b/c has more selective and seems more likely to be used.
CREATE INDEX ix_osm_water_point_type ON osm.water_point (osm_subtype);
CREATE INDEX ix_osm_water_line_type ON osm.water_line (osm_subtype);
CREATE INDEX ix_osm_water_polygon_type ON osm.water_polygon (osm_subtype);


------------------------------------------------

CREATE VIEW osm.water_polygon_in_relations AS
SELECT p_no_rel.osm_id
    FROM osm.water_polygon p_no_rel
    WHERE osm_id > 0
        AND EXISTS (SELECT * 
            FROM (SELECT i.osm_id AS relation_id, 
                        jsonb_array_elements_text(i.member_ids)::BIGINT AS member_id
                    FROM osm.water_polygon i
                    WHERE i.osm_id < 0
                    ) rel
            WHERE rel.member_id = p_no_rel.osm_id
            ) 
;

COMMENT ON VIEW osm.water_polygon_in_relations IS 'Lists all osm_id values included in a water_polygon relation''s member_ids list.  Technically could contain duplicates, but not a concern with current expected use of this view.';
COMMENT ON COLUMN osm.water_polygon_in_relations.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';


CREATE MATERIALIZED VIEW osm.vwater_polygon AS
SELECT p.*
    FROM osm.water_polygon p
    WHERE NOT EXISTS (
        SELECT 1 
            FROM osm.water_polygon_in_relations pir
            WHERE p.osm_id = pir.osm_id)
;

CREATE UNIQUE INDEX uix_osm_vwater_polygon_osm_id
    ON osm.vwater_polygon (osm_id);
CREATE INDEX gix_osm_vwater_polygon
    ON osm.vwater_polygon USING GIST (geom);



------------------------------------------------

CREATE VIEW osm.water_line_in_relations AS
SELECT p_no_rel.osm_id
    FROM osm.water_line p_no_rel
    WHERE osm_id > 0
        AND EXISTS (SELECT * 
            FROM (SELECT i.osm_id AS relation_id, 
                        jsonb_array_elements_text(i.member_ids)::BIGINT AS member_id
                    FROM osm.water_line i
                    WHERE i.osm_id < 0
                    ) rel
            WHERE rel.member_id = p_no_rel.osm_id
            ) 
;

COMMENT ON VIEW osm.water_line_in_relations IS 'Lists all osm_id values included in a water_line relation''s member_ids list.  Technically could contain duplicates, but not a concern with current expected use of this view.';
COMMENT ON COLUMN osm.water_line_in_relations.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';


CREATE MATERIALIZED VIEW osm.vwater_line AS
SELECT p.*
    FROM osm.water_line p
    WHERE NOT EXISTS (
        SELECT 1 
            FROM osm.water_line_in_relations pir
            WHERE p.osm_id = pir.osm_id)
;

CREATE UNIQUE INDEX uix_osm_vwater_line_osm_id
    ON osm.vwater_line (osm_id);
CREATE INDEX gix_osm_vwater_line
    ON osm.vwater_line USING GIST (geom);

